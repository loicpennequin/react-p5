{"version":3,"sources":["models/index.js","pages/Body.jsx"],"names":["BouncingObject","p","initialPosition","this","position","createVector","width","height","vel","gravity","add","applyForce","y","mult","RandomPathObject","x","random","BodyPage","theme","useTheme","useState","model","setModel","models","useMemo","bouncing","currentModel","SketchWrapper","title","description","Body","toMarkdown","githubLink","draw","size","fill","palette","primary","main","noStroke","FormControl","component","FormLabel","RadioGroup","name","value","onChange","e","target","FormControlLabel","control","Radio","label"],"mappings":"wNAAaA,EAAb,WACI,WAAYC,EAAGC,GAAkB,oBAC7BC,KAAKC,SACDF,GAAmBD,EAAEI,aAAaJ,EAAEK,MAAQ,EAAGL,EAAEM,OAAS,GAC9DJ,KAAKK,IAAMP,EAAEI,aAAa,EAAG,GAC7BF,KAAKM,QAAUR,EAAEI,aAAa,EAAG,GALzC,yDASQF,KAAKK,IAAIE,IAAIP,KAAKM,SAClBN,KAAKC,SAASM,IAAIP,KAAKK,OAV/B,6BAaWP,GACHE,KAAKQ,aACDR,KAAKC,SAASQ,EAAIX,EAAEM,SACpBJ,KAAKC,SAASQ,EAAIX,EAAEM,OACpBJ,KAAKK,IAAML,KAAKK,IAAIK,MAAM,QAjBtC,KAsBaC,EAAb,WACI,WAAYb,EAAGC,GAAkB,oBAC7BC,KAAKC,SACDF,GAAmBD,EAAEI,aAAaJ,EAAEK,MAAQ,EAAGL,EAAEM,OAAS,GAHtE,mDAMWN,GACHE,KAAKC,SAASW,GAAKd,EAAEe,QAAQ,EAAG,GAChCb,KAAKC,SAASQ,GAAKX,EAAEe,QAAQ,EAAG,GAC5Bb,KAAKC,SAASW,EAAI,EAClBZ,KAAKC,SAASW,GAAKd,EAAEK,MACdH,KAAKC,SAASW,EAAId,EAAEK,MAC3BH,KAAKC,SAASW,GAAKd,EAAEK,MACdH,KAAKC,SAASQ,EAAI,EACzBT,KAAKC,SAASQ,GAAKX,EAAEM,OACdJ,KAAKC,SAASQ,EAAIX,EAAEM,SAC3BJ,KAAKC,SAASQ,GAAKX,EAAEM,YAhBjC,K,uECTe,SAASU,IACpB,IAAMC,EAAQC,cADiB,EAELC,mBAAS,YAFJ,mBAExBC,EAFwB,KAEjBC,EAFiB,KAGzBC,EAASC,mBACX,iBAAO,CACHC,SAAU,SAACxB,EAAGyB,GAAJ,OACN,IAAI1B,EAAeC,EAAGyB,GAAgBA,EAAatB,WACvDY,OAAQ,SAACf,EAAGyB,GAAJ,OACJ,IAAIZ,EAAiBb,EAAGyB,GAAgBA,EAAatB,cAE7D,IAMJ,OACI,kBAACuB,EAAA,EAAD,CACIC,MAAM,OACNC,YAAaC,IAAKC,aAClBC,WAAW,qEACXC,KACI,kBAAC,IAAD,CAAMZ,MAAOE,EAAOF,KACf,gBAAGjB,EAAH,EAAGA,SAAH,OACG,kBAAC,IAAD,CACIW,EAAGX,EAASW,EACZH,EAAGR,EAASQ,EACZsB,KAAM,GACNC,KAAMjB,EAAMkB,QAAQC,QAAQC,KAC5BC,UAAQ,QAMxB,kBAACC,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,SACA,kBAACE,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAOxB,EAAOyB,SAxB9B,SAAAC,GACjBzB,EAASyB,EAAEC,OAAOH,SAwBN,kBAACI,EAAA,EAAD,CACIJ,MAAM,WACNK,QAAS,kBAACC,EAAA,EAAD,MACTC,MAAM,kBAEV,kBAACH,EAAA,EAAD,CACIJ,MAAM,SACNK,QAAS,kBAACC,EAAA,EAAD,MACTC,MAAM","file":"static/js/Body.daf68da6.chunk.js","sourcesContent":["export class BouncingObject {\r\n    constructor(p, initialPosition) {\r\n        this.position =\r\n            initialPosition || p.createVector(p.width / 2, p.height / 2);\r\n        this.vel = p.createVector(0, 0);\r\n        this.gravity = p.createVector(0, 1);\r\n    }\r\n\r\n    applyForce() {\r\n        this.vel.add(this.gravity);\r\n        this.position.add(this.vel);\r\n    }\r\n\r\n    update(p) {\r\n        this.applyForce();\r\n        if (this.position.y > p.height) {\r\n            this.position.y = p.height;\r\n            this.vel = this.vel.mult(-1);\r\n        }\r\n    }\r\n}\r\n\r\nexport class RandomPathObject {\r\n    constructor(p, initialPosition) {\r\n        this.position =\r\n            initialPosition || p.createVector(p.width / 2, p.height / 2);\r\n    }\r\n\r\n    update(p) {\r\n        this.position.x += p.random(-3, 3);\r\n        this.position.y += p.random(-3, 3);\r\n        if (this.position.x < 0) {\r\n            this.position.x += p.width;\r\n        } else if (this.position.x > p.width) {\r\n            this.position.x -= p.width;\r\n        } else if (this.position.y < 0) {\r\n            this.position.y += p.height;\r\n        } else if (this.position.y > p.height) {\r\n            this.position.y -= p.height;\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useMemo } from 'react';\r\nimport { BouncingObject, RandomPathObject } from '../models';\r\nimport { SketchWrapper } from '../components/SketchWrapper';\r\nimport {\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n} from '@material-ui/core';\r\nimport { Circle, Body } from 'p5-react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport default function BodyPage() {\r\n    const theme = useTheme();\r\n    const [model, setModel] = useState('bouncing');\r\n    const models = useMemo(\r\n        () => ({\r\n            bouncing: (p, currentModel) =>\r\n                new BouncingObject(p, currentModel && currentModel.position),\r\n            random: (p, currentModel) =>\r\n                new RandomPathObject(p, currentModel && currentModel.position),\r\n        }),\r\n        []\r\n    );\r\n\r\n    const handleChange = e => {\r\n        setModel(e.target.value);\r\n    };\r\n    return (\r\n        <SketchWrapper\r\n            title=\"Body\"\r\n            description={Body.toMarkdown()}\r\n            githubLink=\"https://github.com/loicpennequin/react-p5/blob/master/src/Body.jsx\"\r\n            draw={\r\n                <Body model={models[model]}>\r\n                    {({ position }) => (\r\n                        <Circle\r\n                            x={position.x}\r\n                            y={position.y}\r\n                            size={50}\r\n                            fill={theme.palette.primary.main}\r\n                            noStroke\r\n                        />\r\n                    )}\r\n                </Body>\r\n            }\r\n        >\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Model</FormLabel>\r\n                <RadioGroup name=\"model\" value={model} onChange={handleChange}>\r\n                    <FormControlLabel\r\n                        value=\"bouncing\"\r\n                        control={<Radio />}\r\n                        label=\"Bouncing ball\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"random\"\r\n                        control={<Radio />}\r\n                        label=\"Ball moving randomly\"\r\n                    />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </SketchWrapper>\r\n    );\r\n}\r\n"],"sourceRoot":""}