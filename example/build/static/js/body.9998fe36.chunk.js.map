{"version":3,"sources":["components/Body/index.jsx","models/index.js","pages/Body.jsx"],"names":["Body","model","theme","useTheme","position","x","y","size","fill","palette","primary","main","noStroke","BouncingObject","p","initialPosition","this","createVector","width","height","vel","gravity","add","applyForce","mult","RandomPathObject","random","SmileyFacePage","models","bouncing","useCallback","o","useState","setModel","SketchWrapper","title","draw","FormControl","component","FormLabel","RadioGroup","name","value","onChange","e","target","FormControlLabel","control","Radio","label"],"mappings":"wNAIO,SAASA,EAAT,GAA0B,IAAVC,EAAS,EAATA,MACbC,EAAQC,cAEd,OACI,oCACI,kBAAC,IAAD,CAAQF,MAAOA,IACV,gBAAGG,EAAH,EAAGA,SAAH,OACG,kBAAC,IAAD,CACIC,EAAGD,EAASC,EACZC,EAAGF,EAASE,EACZC,KAAM,GACNC,KAAMN,EAAMO,QAAQC,QAAQC,KAC5BC,UAAQ,Q,sBChBnBC,EAAb,WACI,WAAYC,EAAGC,GAAkB,oBAC7BC,KAAKZ,SACDW,GAAmBD,EAAEG,aAAaH,EAAEI,MAAQ,EAAGJ,EAAEK,OAAS,GAC9DH,KAAKI,IAAMN,EAAEG,aAAa,EAAG,GAC7BD,KAAKK,QAAUP,EAAEG,aAAa,EAAG,GALzC,yDASQD,KAAKI,IAAIE,IAAIN,KAAKK,SAClBL,KAAKZ,SAASkB,IAAIN,KAAKI,OAV/B,6BAaWN,GACHE,KAAKO,aACDP,KAAKZ,SAASE,EAAIQ,EAAEK,SACpBH,KAAKZ,SAASE,EAAIQ,EAAEK,OACpBH,KAAKI,IAAMJ,KAAKI,IAAII,MAAM,QAjBtC,KAsBaC,EAAb,WACI,WAAYX,EAAGC,GAAkB,oBAC7BC,KAAKZ,SACDW,GAAmBD,EAAEG,aAAaH,EAAEI,MAAQ,EAAGJ,EAAEK,OAAS,GAHtE,mDAMWL,GACHE,KAAKZ,SAASC,GAAKS,EAAEY,QAAQ,EAAG,GAChCV,KAAKZ,SAASE,GAAKQ,EAAEY,QAAQ,EAAG,GAC5BV,KAAKZ,SAASC,EAAI,EAClBW,KAAKZ,SAASC,GAAKS,EAAEI,MACdF,KAAKZ,SAASC,EAAIS,EAAEI,MAC3BF,KAAKZ,SAASC,GAAKS,EAAEI,MACdF,KAAKZ,SAASE,EAAI,EACzBU,KAAKZ,SAASE,GAAKQ,EAAEK,OACdH,KAAKZ,SAASE,EAAIQ,EAAEK,SAC3BH,KAAKZ,SAASE,GAAKQ,EAAEK,YAhBjC,K,sDCXe,SAASQ,IACpB,IASMC,EAAS,CACXC,SAVaC,uBACb,SAAChB,EAAGiB,GAAJ,OAAU,IAAIlB,EAAeC,EAAGiB,GAAKA,EAAE3B,YACvC,IASAsB,OAPWI,uBACX,SAAChB,EAAGiB,GAAJ,OAAU,IAAIN,EAAiBX,EAAGiB,GAAKA,EAAE3B,YACzC,KAPiC,EAeX4B,mBAAS,YAfE,mBAe9B/B,EAf8B,KAevBgC,EAfuB,KAmBrC,OACI,kBAACC,EAAA,EAAD,CAAeC,MAAM,OAAOC,KAAM,kBAACpC,EAAD,CAAMC,MAAO2B,EAAO3B,MAClD,kBAACoC,EAAA,EAAD,CAAaC,UAAU,YACnB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,SACA,kBAACE,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAOzC,EAAO0C,SAP9B,SAAAC,GACjBX,EAASW,EAAEC,OAAOH,SAON,kBAACI,EAAA,EAAD,CACIJ,MAAM,WACNK,QAAS,kBAACC,EAAA,EAAD,MACTC,MAAM,kBAEV,kBAACH,EAAA,EAAD,CACIJ,MAAM,SACNK,QAAS,kBAACC,EAAA,EAAD,MACTC,MAAM","file":"static/js/body.9998fe36.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Circle, Body as P5Body } from 'p5-react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nexport function Body({ model }) {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            <P5Body model={model}>\r\n                {({ position }) => (\r\n                    <Circle\r\n                        x={position.x}\r\n                        y={position.y}\r\n                        size={50}\r\n                        fill={theme.palette.primary.main}\r\n                        noStroke\r\n                    />\r\n                )}\r\n            </P5Body>\r\n        </>\r\n    );\r\n}\r\n","export class BouncingObject {\r\n    constructor(p, initialPosition) {\r\n        this.position =\r\n            initialPosition || p.createVector(p.width / 2, p.height / 2);\r\n        this.vel = p.createVector(0, 0);\r\n        this.gravity = p.createVector(0, 1);\r\n    }\r\n\r\n    applyForce() {\r\n        this.vel.add(this.gravity);\r\n        this.position.add(this.vel);\r\n    }\r\n\r\n    update(p) {\r\n        this.applyForce();\r\n        if (this.position.y > p.height) {\r\n            this.position.y = p.height;\r\n            this.vel = this.vel.mult(-1);\r\n        }\r\n    }\r\n}\r\n\r\nexport class RandomPathObject {\r\n    constructor(p, initialPosition) {\r\n        this.position =\r\n            initialPosition || p.createVector(p.width / 2, p.height / 2);\r\n    }\r\n\r\n    update(p) {\r\n        this.position.x += p.random(-3, 3);\r\n        this.position.y += p.random(-3, 3);\r\n        if (this.position.x < 0) {\r\n            this.position.x += p.width;\r\n        } else if (this.position.x > p.width) {\r\n            this.position.x -= p.width;\r\n        } else if (this.position.y < 0) {\r\n            this.position.y += p.height;\r\n        } else if (this.position.y > p.height) {\r\n            this.position.y -= p.height;\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Body } from '../components/Body';\r\nimport { BouncingObject, RandomPathObject } from '../models';\r\nimport { SketchWrapper } from '../components/SketchWrapper';\r\nimport {\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n} from '@material-ui/core';\r\nexport default function SmileyFacePage() {\r\n    const bouncing = useCallback(\r\n        (p, o) => new BouncingObject(p, o && o.position),\r\n        []\r\n    );\r\n    const random = useCallback(\r\n        (p, o) => new RandomPathObject(p, o && o.position),\r\n        []\r\n    );\r\n\r\n    const models = {\r\n        bouncing,\r\n        random,\r\n    };\r\n\r\n    const [model, setModel] = useState('bouncing');\r\n    const handleChange = e => {\r\n        setModel(e.target.value);\r\n    };\r\n    return (\r\n        <SketchWrapper title=\"Body\" draw={<Body model={models[model]} />}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Model</FormLabel>\r\n                <RadioGroup name=\"model\" value={model} onChange={handleChange}>\r\n                    <FormControlLabel\r\n                        value=\"bouncing\"\r\n                        control={<Radio />}\r\n                        label=\"Bouncing ball\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"random\"\r\n                        control={<Radio />}\r\n                        label=\"Ball moving randomly\"\r\n                    />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </SketchWrapper>\r\n    );\r\n}\r\n"],"sourceRoot":""}